.editor {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.editorContent {
  flex: 1;
  cursor: text;
  position: relative;
}

.editorContent :global(.ProseMirror) {
  padding: 1.5rem 0 2rem 0;
  min-height: 100%;
  outline: none;
  max-width: 900px;
  margin: 0 auto;
  color: var(--mb-color-text-dark);
  font-size: 1rem;
  line-height: 1.5;
}

.editorContent :global(.ProseMirror h1) {
  font-size: 1.75rem;
  font-weight: 700;
  margin: 1.5rem 0 1rem;
  line-height: 1.3;
  color: var(--mb-color-text-dark);
}

.editorContent :global(.ProseMirror h2) {
  font-size: 1.375rem;
  font-weight: 700;
  margin: 1.25rem 0 0.75rem;
  line-height: 1.3;
  color: var(--mb-color-text-dark);
}

.editorContent :global(.ProseMirror h3) {
  font-size: 1.125rem;
  font-weight: 700;
  margin: 1rem 0 0.5rem;
  line-height: 1.4;
  color: var(--mb-color-text-dark);
}

.editorContent :global(.ProseMirror p) {
  margin: 0 0 1rem 0;
  line-height: 1.5;
  font-size: 1rem;
}

.editorContent :global(.ProseMirror ul) {
  margin: 0 0 1rem 0;
  padding-left: 1.5rem;
  list-style-type: disc;
}

.editorContent :global(.ProseMirror ol) {
  margin: 0 0 1rem 0;
  padding-left: 1.5rem;
  list-style-type: decimal;
}

.editorContent :global(.ProseMirror li) {
  margin: 0 0 0.25rem 0;
  line-height: 1.5;
  display: list-item;
}

.editorContent :global(.ProseMirror ul ul) {
  list-style-type: circle;
  margin-top: 0.25rem;
}

.editorContent :global(.ProseMirror ul ul ul) {
  list-style-type: square;
}

.editorContent :global(.ProseMirror li > ul),
.editorContent :global(.ProseMirror li > ol) {
  margin-top: 0.25rem;
}

.editorContent :global(.ProseMirror li p) {
  line-height: 1.5;
  margin-bottom: 0.25rem;
}

.editorContent :global(.ProseMirror code) {
  background-color: var(--mb-base-color-orion-5);
  padding: 0.125rem 0.375rem;
  border-radius: var(--mantine-radius-xs);
  font-family: var(--mb-default-monospace-font-family, monospace);
  font-size: 0.875rem;
  color: var(--mb-color-text-dark);
  border: 1px solid var(--mb-base-color-orion-10);
}

.editorContent :global(.ProseMirror pre) {
  background-color: var(--mb-base-color-gray-10);
  color: var(--mb-color-text-dark);
  padding: 1rem;
  border-radius: var(--mantine-radius-sm);
  overflow-x: auto;
  margin: 0 0 1rem 0;
  font-size: 0.875rem;
  border: 1px solid var(--mb-base-color-gray-20);
}

.editorContent :global(.ProseMirror pre code) {
  background: none;
  padding: 0;
  color: inherit;
  font-size: inherit;
  border: none;
}

.editorContent :global(.ProseMirror blockquote) {
  border-left: 3px solid var(--mb-base-color-orion-20);
  margin: 0 0 1rem 0;
  color: var(--mb-color-text-medium);
  font-style: italic;
  background-color: var(--mb-base-color-orion-5);
  padding: 1rem;
  padding-left: 1.25rem;
  border-radius: var(--mantine-radius-xs);
}

.editorContent :global(.ProseMirror hr) {
  border: none;
  border-top: 1px solid var(--mb-color-border);
  margin: 1.5rem 0;
}

.editorContent :global(.ProseMirror:focus) {
  outline: none;
}

.editorContent :global(p.is-empty:first-child:before) {
  color: var(--mb-color-text-light);
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
  font-size: 1rem;
}

.img {
  max-width: 80%;
  position: relative;
  left: 50%;
  transform: translateX(-50%);

  &:global(.ProseMirror-selectednode) {
    box-shadow: 0 0 0 1px var(--mb-color-brand);
    border-radius: var(--mantine-radius-xs);
  }
}

databaseChangeLog:
  - objectQuotingStrategy: QUOTE_ALL_OBJECTS
  - changeSet:
      id: v57.2025-08-01T10:00:00
      author: qnkhuat
      comment: Add undo/redo change tracking table
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: data_edit_undo_chain
      changes:
        - createTable:
            tableName: data_edit_undo_chain
            remarks: Store the state necessary to power undo / redo.
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  remarks: Batch number for grouped changes (global increment)
                  name: batch_num
                  type: int
                  constraints:
                    nullable: false
              - column:
                  remarks: Reference to the table being modified
                  name: table_id
                  type: int
                  constraints:
                    nullable: false
              - column:
                  remarks: PK of the row being modified, potentially composite. Stored as a sorted JSON map.
                  name: row_pk
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  remarks: ID of the user who made the change
                  name: user_id
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: scope
                  type: ${text.type}
                  remarks: Identifies where the changes were made from
                  constraints:
                    nullable: false
              - column:
                  name: undoable
                  type: ${boolean.type}
                  remarks: Identifies whether a change can be undo
                  constraints:
                    nullable: false
                  defaultValue: true
              - column:
                  remarks: Value of the field before the change
                  name: raw_before
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  remarks: Value of the field after the change
                  name: raw_after
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  remarks: Whether this change has been undone
                  name: undone
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the change was created
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the change was updated
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-01T10:02:00
      author: qnkhuat
      comment: A table for generating atomic sequence numbers
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: sequences
      changes:
        - createTable:
            tableName: sequences
            remarks: A table for generating atomic sequence numbers
            columns:
              - column:
                  name: name
                  type: varchar(50)
                  remarks: The name of the sequence
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: next_val
                  remarks: The next value in this sequence
                  type: bigint
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-02T15:55:38
      author: metamben
      comment: Create transform table
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: transform
      changes:
        - createTable:
            tableName: transform
            remarks: The main table for Transform entities
            columns:
              - column:
                  name: id
                  remarks: Unique ID
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  remarks: Name
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: description
                  type: ${text.type}
                  remarks: the description of the transform
                  constraints:
                    nullable: true
              - column:
                  name: source
                  remarks: JSON of source
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: target
                  remarks: JSON of target
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  remarks: The timestamp of when the transform was created
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the transform was updated
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-03T10:00:00
      author: eric
      comment: Create worker_run table in app database to track worker execution
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: worker_run
      changes:
        - createTable:
            tableName: worker_run
            remarks: Table to track worker job executions and their status in the app database
            columns:
              - column:
                  name: run_id
                  type: char(21)
                  remarks: 'NanoID identifier for the worker run'
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: work_id
                  type: bigint
                  remarks: 'Identifier for the unit of work (transform, sync, etc.)'
                  constraints:
                    nullable: false
              - column:
                  name: work_type
                  type: varchar(255)
                  remarks: 'Type/category of the worker job'
                  constraints:
                    nullable: false
              - column:
                  name: run_method
                  type: varchar(255)
                  remarks: 'Method used to execute the worker job'
                  constraints:
                    nullable: false
              - column:
                  name: is_local
                  type: ${boolean.type}
                  remarks: 'Is this run local?'
                  constraints:
                    nullable: false
              - column:
                  name: status
                  type: varchar(50)
                  remarks: 'Current status of the worker job (running, completed, failed, etc.)'
                  constraints:
                    nullable: false
              - column:
                  name: is_active
                  type: ${boolean.type}
                  remarks: 'True only for currently running jobs, null for the others'
                  constraints:
                    nullable: true
                    defaultValue: true
              - column:
                  name: start_time
                  type: ${timestamp_type}
                  remarks: 'When the worker job started'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: end_time
                  type: ${timestamp_type}
                  remarks: 'When the worker job completed (null if still running)'
                  constraints:
                    nullable: true
              - column:
                  name: message
                  type: ${text.type}
                  remarks: 'Human-readable message about the run; may contain error message in case status is error'
                  constraints:
                    nullable: true


  - changeSet:
      id: v57.2025-08-04T10:53:00
      author: metamben
      comment: Add last run index on worker_run
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                tableName: worker_run
                indexName: idx_worker_run_last_run_idx
      changes:
        - createIndex:
            tableName: worker_run
            indexName: idx_worker_run_last_run_idx
            columns:
              - column:
                  name: work_type
              - column:
                  name: work_id
              - column:
                  name: start_time
                  descending: true

  - changeSet:
      id: v57.2025-08-04T10:54:00
      author: metamben
      comment: Add unique index to make sure at most one run can be active
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                tableName: worker_run
                indexName: idx_unique_active_worker_run
      changes:
        - addUniqueConstraint:
            tableName: worker_run
            constraintName: idx_unique_active_worker_run
            columnNames: work_type, work_id, is_active

  - changeSet:
      id: v57.2025-08-04T10:55:00
      author: metamben
      comment: Add partial index for querying active runs
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                tableName: worker_run
                indexName: idx_worker_run_active_runs
      changes:
        - createIndex:
            tableName: worker_run
            indexName: idx_worker_run_active_runs
            columns:
              - column:
                  name: work_type
              - column:
                  name: work_id
            where: "is_active = true"

  - changeSet:
      id: v57.2025-08-04T10:55:01
      author: metamben
      comment: Add index for querying active runs
      dbms: mysql, h2
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                tableName: worker_run
                indexName: idx_worker_run_active_runs
      changes:
        - createIndex:
            tableName: worker_run
            indexName: idx_worker_run_active_runs
            columns:
              - column:
                  name: is_active
              - column:
                  name: work_type
              - column:
                  name: work_id

  - changeSet:
      id: v57.2025-08-06T10:00:00
      author: eric
      comment: Create worker_run_cancelation table to track cancelation.
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: worker_run_cancelation
      changes:
        - createTable:
            tableName: worker_run_cancelation
            remarks: Table to track the cancelation of worker job executions
            columns:
              - column:
                  name: run_id
                  type: char(21)
                  remarks: 'NanoID identifier for the worker run'
                  constraints:
                    primaryKey: true
                    nullable: false
                    referencedTableName: worker_run
                    referencedColumnNames: run_id
                    foreignKeyName: fk_worker_run_cancelation_worker_run_run_id
                    deleteCascade: true
              - column:
                  name: time
                  type: ${timestamp_type}
                  remarks: 'The time of the request'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-07T10:00:00
      author: galdre
      comment: Add transform_tag table for grouping transforms
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: transform_tag
      changes:
        - createTable:
            tableName: transform_tag
            remarks: Tags for grouping transforms
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(254)
                  remarks: Name of the tag
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: When the tag was created
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: ${timestamp_type}
                  remarks: When the tag was updated
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-07T10:01:00
      author: galdre
      comment: Add transform_job table for scheduled execution of tagged transforms
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: transform_job
      changes:
        - createTable:
            tableName: transform_job
            remarks: Jobs that execute transforms based on tags
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: ${text.type}
                  remarks: Job name
                  constraints:
                    nullable: false
              - column:
                  name: description
                  type: ${text.type}
                  remarks: Job description
              - column:
                  name: schedule
                  type: ${text.type}
                  remarks: Cron expression for job schedule
                  constraints:
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: NanoID identifier for the job
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: When the job was created
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: ${timestamp_type}
                  remarks: When the job was updated
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-07T10:02:00
      author: galdre
      comment: Add transform_tags join table for transform-tag associations
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: transform_tags
      changes:
        - createTable:
            tableName: transform_tags
            remarks: Join table for transforms and tags
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Primary key
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: transform_id
                  type: int
                  remarks: Transform ID
                  constraints:
                    nullable: false
              - column:
                  name: tag_id
                  type: int
                  remarks: Tag ID
                  constraints:
                    nullable: false
        - addForeignKeyConstraint:
            baseTableName: transform_tags
            baseColumnNames: transform_id
            referencedTableName: transform
            referencedColumnNames: id
            constraintName: fk_transform_tags_transform_id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: transform_tags
            baseColumnNames: tag_id
            referencedTableName: transform_tag
            referencedColumnNames: id
            constraintName: fk_transform_tags_tag_id
            onDelete: CASCADE
        - addUniqueConstraint:
            tableName: transform_tags
            columnNames: transform_id, tag_id
            constraintName: unique_transform_tag

  - changeSet:
      id: v57.2025-08-07T10:03:00
      author: galdre
      comment: Add transform_job_tags join table for job-tag associations
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: transform_job_tags
      changes:
        - createTable:
            tableName: transform_job_tags
            remarks: Join table for jobs and tags
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Primary key
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: job_id
                  type: int
                  remarks: Job ID
                  constraints:
                    nullable: false
              - column:
                  name: tag_id
                  type: int
                  remarks: Tag ID
                  constraints:
                    nullable: false
        - addForeignKeyConstraint:
            baseTableName: transform_job_tags
            baseColumnNames: job_id
            referencedTableName: transform_job
            referencedColumnNames: id
            constraintName: fk_transform_job_tags_job_id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: transform_job_tags
            baseColumnNames: tag_id
            referencedTableName: transform_tag
            referencedColumnNames: id
            constraintName: fk_transform_job_tags_tag_id
            onDelete: CASCADE
        - addUniqueConstraint:
            tableName: transform_job_tags
            columnNames: job_id, tag_id
            constraintName: unique_job_tag

      rollback:
        - dropForeignKeyConstraint:
            baseTableName: transform_job_tags
            constraintName: fk_transform_job_tags_job_id
        - dropForeignKeyConstraint:
            baseTableName: transform_job_tags
            constraintName: fk_transform_job_tags_tag_id
        - dropUniqueConstraint:
            tableName: transform_job_tags
            constraintName: unique_job_tag
        - dropTable:
            tableName: transform_job_tags
  - changeSet:
      id: v57.2025-08-07T10:06:00
      author: galdre
      comment: Add default transform tags and jobs for common scheduling patterns
      preConditions:
        - onFail: MARK_RAN
        - tableExists:
            tableName: transform_tag
        - tableExists:
            tableName: transform_job
        - tableExists:
            tableName: transform_job_tags
      changes:
        - insert:
            tableName: transform_tag
            columns:
              - column:
                  name: name
                  value: hourly
        - insert:
            tableName: transform_tag
            columns:
              - column:
                  name: name
                  value: daily
        - insert:
            tableName: transform_tag
            columns:
              - column:
                  name: name
                  value: weekly
        - insert:
            tableName: transform_tag
            columns:
              - column:
                  name: name
                  value: monthly
        - insert:
            tableName: transform_job
            columns:
              - column:
                  name: name
                  value: hourly
              - column:
                  name: schedule
                  value: 0 0 * * * ? *
              - column:
                  name: entity_id
                  value: hourly000000000000000
        - insert:
            tableName: transform_job
            columns:
              - column:
                  name: name
                  value: daily
              - column:
                  name: schedule
                  value: 0 0 0 * * ? *
              - column:
                  name: entity_id
                  value: daily0000000000000000
        - insert:
            tableName: transform_job
            columns:
              - column:
                  name: name
                  value: weekly
              - column:
                  name: schedule
                  value: 0 0 0 ? * 1 *
              - column:
                  name: entity_id
                  value: weekly000000000000000
        - insert:
            tableName: transform_job
            columns:
              - column:
                  name: name
                  value: monthly
              - column:
                  name: schedule
                  value: 0 0 0 1 * ? *
              - column:
                  name: entity_id
                  value: monthly00000000000000
      rollback:
        - sql:
            sql: "delete from transform_tag where \"name\" in ('hourly', 'daily', 'weekly', 'monthly')"
            dbms: postgresql
        - sql:
            sql: "delete from transform_tag where `name` in ('hourly', 'daily', 'weekly', 'monthly')"
            dbms: mysql,mariadb
        - sql:
            sql: "delete from transform_tag where \"NAME\" in ('hourly', 'daily', 'weekly', 'monthly')"
            dbms: h2
        - sql:
            sql: "delete from transform_job where \"entity_id\" in ('hourly000000000000000', 'daily0000000000000000', 'weekly000000000000000', 'monthly00000000000000')"
            dbms: postgresql
        - sql:
            sql: "delete from transform_job where `entity_id` in ('hourly000000000000000', 'daily0000000000000000', 'weekly000000000000000', 'monthly00000000000000')"
            dbms: mysql,mariadb
        - sql:
            sql: "delete from transform_job where \"ENTITY_ID\" in ('hourly000000000000000', 'daily0000000000000000', 'weekly000000000000000', 'monthly00000000000000')"
            dbms: h2

  - changeSet:
      id: v57.2025-08-07T11:00:00
      author: galdre
      comment: Populate transform_job_tags join table to link default jobs with their corresponding tags
      preConditions:
        - onFail: MARK_RAN
        - tableExists:
            tableName: transform_job_tags
        - tableExists:
            tableName: transform_job
        - tableExists:
            tableName: transform_tag
      changes:
        - sql:
            sql: |
              INSERT INTO transform_job_tags (job_id, tag_id)
              SELECT j.id, t.id
              FROM transform_job j, transform_tag t
              WHERE j.entity_id = 'hourly000000000000000' AND t.name = 'hourly';

              INSERT INTO transform_job_tags (job_id, tag_id)
              SELECT j.id, t.id
              FROM transform_job j, transform_tag t
              WHERE j.entity_id = 'daily0000000000000000' AND t.name = 'daily';

              INSERT INTO transform_job_tags (job_id, tag_id)
              SELECT j.id, t.id
              FROM transform_job j, transform_tag t
              WHERE j.entity_id = 'weekly000000000000000' AND t.name = 'weekly';

              INSERT INTO transform_job_tags (job_id, tag_id)
              SELECT j.id, t.id
              FROM transform_job j, transform_tag t
              WHERE j.entity_id = 'monthly00000000000000' AND t.name = 'monthly';
      rollback:
        - sql:
            sql: |
              DELETE FROM transform_job_tags
              WHERE job_id IN (
                SELECT id FROM transform_job
                WHERE entity_id IN ('hourly000000000000000', 'daily0000000000000000', 'weekly000000000000000', 'monthly00000000000000')
              );

  - changeSet:
      id: v57.2025-08-08T10:00:00
      author: william
      comment: Create transform_job_run table in app database to track transform job execution
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: transform_job_run
      changes:
        - createTable:
            tableName: transform_job_run
            remarks: Table to track transform job executions and their status in the app database
            columns:
              - column:
                  name: run_id
                  type: char(21)
                  remarks: 'NanoID identifier for the worker run'
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: job_id
                  type: bigint
                  remarks: 'Identifier for the transform job'
                  constraints:
                    nullable: false
              - column:
                  name: run_method
                  type: varchar(255)
                  remarks: 'Method used to execute the transform job'
                  constraints:
                    nullable: false
              - column:
                  name: status
                  type: varchar(50)
                  remarks: 'Current status of the transform job (running, completed, failed, etc.)'
                  constraints:
                    nullable: false
              - column:
                  name: is_active
                  type: ${boolean.type}
                  remarks: 'True only for currently running jobs, null for the others'
                  constraints:
                    nullable: true
                    defaultValue: true
              - column:
                  name: start_time
                  type: ${timestamp_type}
                  remarks: 'When the transform job started'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: end_time
                  type: ${timestamp_type}
                  remarks: 'When the tranform job completed (null if still running)'
                  constraints:
                    nullable: true
              - column:
                  name: message
                  type: ${text.type}
                  remarks: 'Human-readable message about the run; may contain error message in case status is error'
                  constraints:
                    nullable: true
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-21T12:00:00
      author: edpaget
      comment: Create document table
      changes:
        - createTable:
            tableName: document
            remarks: Documents table
            columns:
              - column:
                  name: id
                  remarks: Unique ID
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  remarks: Document name
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  remarks: The timestamp of when the document was created
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: document
                  remarks: content of the document
                  type: ${text.type}
              - column:
                  name: content_type
                  remarks: the content_type of the document column
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: creator_id
                  remarks: User who created this document
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  remarks: The timestamp of when the document was updated
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: collection_id
                  remarks: What collection I live in. Null if it's Our Analytics.
                  type: int
                  constraints:
                    nullable: true
              - column:
                  name: archived
                  remarks: Has this document been archived?
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
              - column:
                  name: archived_directly
                  remarks: Was this thing trashed directly
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: true
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity
                  constraints:
                    nullable: true
                    unique: true
              - column:
                  name: last_viewed_at
                  type: ${timestamp_type}
                  remarks: Timestamp of when this document was last viewed
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: view_count
                  type: integer
                  defaultValueNumeric: 0
                  remarks: Keeps a running count of document views
                  constraints:
                    nullable: false
              - column:
                  name: collection_position
                  type: integer
                  remarks: Collection position used for pinning documents. Higher numbers = pinned, null = not pinned.
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-21T12:00:10
      author: edpaget
      comment: Add index on document.creator_id
      changes:
        - createIndex:
            tableName: document
            indexName: idx_document_creator_id
            columns:
              - column:
                  name: creator_id
      rollback:
        - dropIndex:
            tableName: document
            indexName: idx_document_creator_id

  - changeSet:
      id: v57.2025-08-21T12:00:11
      author: edpaget
      comment: Add `document.creator_id` foreign key constraint
      changes:
        - addForeignKeyConstraint:
            baseTableName: document
            baseColumnNames: creator_id
            referencedTableName: core_user
            referencedColumnNames: id
            constraintName: fk_document_ref_creator_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T12:00:30
      author: edpaget
      comment: Add index on document.collection_id
      changes:
        - createIndex:
            tableName: document
            indexName: idx_document_collection_id
            columns:
              - column:
                  name: collection_id
      rollback:
        - dropIndex:
            tableName: document
            indexName: idx_document_collection_id

  - changeSet:
      id: v57.2025-08-21T12:00:59
      author: johnswanson
      comment: Add `document.collection_id` foreign key constraint
      changes:
        - addForeignKeyConstraint:
            baseTableName: document
            baseColumnNames: collection_id
            referencedTableName: collection
            referencedColumnNames: id
            constraintName: fk_document_ref_collection_id
            onDelete: SET NULL

  - changeSet:
      id: v57.2025-08-21T17:23:20
      author: edpaget
      comment: Add document_id column to report_card table
      changes:
        - addColumn:
            tableName: report_card
            columns:
              - column:
                  name: document_id
                  remarks: Associates cards with a particular document
                  type: int
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-21T17:23:30
      author: edpaget
      comment: Add index on report_card.document_id
      changes:
        - createIndex:
            tableName: report_card
            indexName: idx_repord_card_document_id
            columns:
              - column:
                  name: document_id
      rollback:
        - dropIndex:
            tableName: report_card
            indexName: idx_repord_card_document_id

  - changeSet:
      id: v57.2025-08-21T17:23:33
      author: edpaget
      comment: Add foreign key constraint for document_id in report_card
      changes:
        - addForeignKeyConstraint:
            baseTableName: report_card
            baseColumnNames: document_id
            referencedTableName: document
            referencedColumnNames: id
            constraintName: fk_report_card_document_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T17:42:32
      author: edpaget
      comment: Create document_bookmark table
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: document_bookmark
      changes:
        - createTable:
            tableName: document_bookmark
            remarks: Store user bookmarks for documents
            columns:
              - column:
                  name: id
                  remarks: Unique ID
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: user_id
                  remarks: User who bookmarked the document
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: document_id
                  remarks: The document that was bookmarked
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  remarks: The timestamp when the bookmark was created
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
      rollback:
        - dropTable:
            tableName: document_bookmark

  - changeSet:
      id: v57.2025-08-21T17:42:33
      author: edpaget
      comment: Add index on document_bookmark.user_id
      changes:
        - createIndex:
            tableName: document_bookmark
            indexName: idx_document_bookmark_user_id
            columns:
              - column:
                  name: user_id
      rollback:
        - dropIndex:
            tableName: document_bookmark
            indexName: idx_document_bookmark_user_id

  - changeSet:
      id: v57.2025-08-21T17:42:34
      author: edpaget
      comment: Add index on document_bookmark.document_id
      changes:
        - createIndex:
            tableName: document_bookmark
            indexName: idx_document_bookmark_document_id
            columns:
              - column:
                  name: document_id
      rollback:
        - dropIndex:
            tableName: document_bookmark
            indexName: idx_document_bookmark_document_id

  - changeSet:
      id: v57.2025-08-21T17:42:35
      author: edpaget
      comment: Add foreign key constraint for document_bookmark.user_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: document_bookmark
            baseColumnNames: user_id
            referencedTableName: core_user
            referencedColumnNames: id
            constraintName: fk_document_bookmark_user_id
            onDelete: CASCADE
      rollback:
        - dropForeignKeyConstraint:
            baseTableName: document_bookmark
            constraintName: fk_document_bookmark_user_id

  - changeSet:
      id: v57.2025-08-21T17:42:36
      author: edpaget
      comment: Add foreign key constraint for document_bookmark.document_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: document_bookmark
            baseColumnNames: document_id
            referencedTableName: document
            referencedColumnNames: id
            constraintName: fk_document_bookmark_document_id
            onDelete: CASCADE
      rollback:
        - dropForeignKeyConstraint:
            baseTableName: document_bookmark
            constraintName: fk_document_bookmark_document_id

  - changeSet:
      id: v57.2025-08-21T17:42:37
      author: edpaget
      comment: Add unique constraint for document_bookmark user_id and document_id
      changes:
        - addUniqueConstraint:
            tableName: document_bookmark
            columnNames: user_id, document_id
            constraintName: idx_document_bookmark_user_document_unique
      rollback:
        - dropUniqueConstraint:
            tableName: document_bookmark
            constraintName: idx_document_bookmark_user_document_unique

  - changeSet:
      id: v57.2025-08-06T13:00:00
      author: escherize
      comment: Create workspace table
      changes:
        - createTable:
            tableName: workspace
            remarks: Workspaces table
            columns:
              - column:
                  name: id
                  remarks: Unique ID
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: slug
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: description
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  name: created_at
                  remarks: The timestamp of when the document was created
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  remarks: The timestamp of when the document was updated
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              # Json cols:
              - column:
                  name: plans
                  remarks: JSON object containing plans, keyed by path
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  name: transforms
                  remarks: JSON object containing transforms
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  name: activity_logs
                  remarks: JSON object containing activity_logs, keyed by run-id
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  name: permissions
                  remarks: JSON object containing permissions
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  name: users
                  remarks: JSON object containing info about workspace-users
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  name: data_warehouses
                  remarks: JSON object containing data warehouses
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: documents
                  remarks: seq of document ids linked to this workspace
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: collection_id
                  type: int
                  remarks: The collection containing the workspace
                  constraints:
                    nullable: false
                    referencedTableName: collection
                    referencedColumnNames: id
                    foreignKeyName: fk_workspace_ref_collection_id
                    deleteCascade: true


# >>>>>>>>>> DO NOT ADD NEW MIGRATIONS BELOW THIS LINE! ADD THEM ABOVE <<<<<<<<<<

########################################################################################################################
#
# ADVICE:
#
# 1) Think through some of these points when writing a migration, learn from our past mistakes:
#    - Do you really need a migration? Could the feature work without it? Prefer not to if possible.
#      Data in the wild can be vastly different from what you expect, and it's hard to get right.
#    - Make sure your migration is backward compatible: it might not be possible to add a constraint back
#      if you drop it in a migration.
#    - Postgres, MySQL and H2 have their differences. Make sure your migration works for all.
#    - Database encryption is a major issue:
#      - Fields like `metabase_database.details` or `setting.value` can be encrypted, so you need to decrypt them in
#        your migration. See #42617, #44048.
#      - Database could be partially encrypted, see https://www.notion.so/72575933ef2a446bafd16909e05a7387
#    - Custom migrations:
#      - Prefer SQL migrations when possible.
#      - Never use application code: it can change and *will* break your migration.
#      - Do not use Toucan models - refer table names directly.
#      - If it's a big change, consider using Quartz, see #42279
#      - More in `metabase.app_db.custom_migrations` namespace doc.
#    - Never delete a migration: users won't be able to downgrade. If you really need to, see #44908
#    - Migration id (`vXX.<date>`) must match its earliest released version:
#      - Do not backport `v51....` to version 50, Metabase will try to downgrade it.
#      - Instead, write a migration with an oldest target you plan to backport to in mind.
#
# 2) Migrations should go in the ###_update_migrations.yaml file for the target version.
#
# 3) Run mage lint-migrations-file to run core.spec checks against any changes you make here. Liquibase is pretty
#    forgiving and won't complain if you accidentally mix up things like deleteCascade and onDelete: CASCADE. CI runs
#    this check but it's nicer to know now instead of waiting for CI.
#
# 3) Migration IDs should follow the format
#
#    vMM.TIMESTAMP
#
#    Where
#
#    M         = major version
#    TIMESTAMP = the current timestamp with format `yyyy-MM-dd'T'HH:mm:ss`
#                To get this timestamp, evaluate this in your REPL: `(dev/migration-timestamp)`
#
#    E.g: You're adding a new migration for version 49, And it's 10:30:00AM on April 1, 2023 (UTC),
#    your migration id should be: `v49.2023-04-01T10:30:00`.
#
# PLEASE KEEP THIS MESSAGE AT THE BOTTOM OF THIS FILE!!!!! Add new migrations above the message.
#
########################################################################################################################
